prontera,156,283,4	script	The Great Alchemist::RESET	4_M_ALCHE_B,{
mes .NpcName$;
mes "So are you satisfied with your";
mes "current stat allocation?";
mes "Of course not, if you want to make";
mes "a change then listen on.";
next;
mes .NpcName$;
mes "I use the power of the"; 
mes "^009900"+getitemname(.stoneid)+"^000000 to help adventurers";
mes "reset their stat choices.";
mes "Of course the more powerful the";
mes "adventurer, the more ^009900"+getitemname(.stoneid)+"s^000000";
mes "I need the perform the reset.";
next;
	for(set .@i,0; .@i < getarraysize(.minrange); set .@i,.@i+1) {
		if(BaseLevel >= .minrange[.@i] && BaseLevel <= .maxrange[.@i]) {
			set .@stonesreq,.stones[.@i]; 
		}
	}

mes .NpcName$;
mes "For instance you would require.";
mes "^009900"+getitemname(.stoneid)+" x "+.@stonesreq+"^000000 to reset all your stats to 1 and get all your status points back.";
next;
switch(select("Tell me More!:Lets reset now.:[ ^FF0000EVENT^000000 ] ONCE A MONTH:"+((.event == 0)?"":"[ ^FF0000EVENT^000000 ] ULIMITED RESET.:")+"Later.")) {
	case 1:
		mes .NpcName$;
		for(set .@i,0; .@i<getarraysize(.minrange); set .@i,.@i+1) {
			mes "Base Lvl ^000099"+.minrange[.@i]+" - "+.maxrange[.@i]+"^000000 ^009900["+.stones[.@i]+" "+getitemname(.stoneid)+"]^000000";
		}
		close;
	case 2:
		mes .NpcName$;
		mes "Ok let's start checking.";
		next;
		if(countitem(.stoneid) >= .@stonesreq) {
			delitem .stoneid,.@stonesreq;
			resetstatus;
			mes .NpcName$;
			mes "Well Done..";
			close;
		}
		else {
			mes .NpcName$;
			mes "You do not have enough ^009900"+getitemname(.stoneid)+"s^000000";
			close;
		}
	case 3:
		mes .NpcName$;	
		if(#FreeReset > gettimetick(2)) {
				set .@k,#FreeReset - (gettimetick(2)-(2592000));
							set .@d,.@k % 2592000 / 86400;
							set .@h,.@k % 86400 / 3600;
							set .@m,.@k % 3600 / 60;
							set .@s,.@k % 60;
				set .@d$, .@d+" day"+((.@d <= 1)?"":"s");
				set .@h$, .@h+" hour"+((.@h <= 1)?"":"s");
				set .@m$, .@m+" minute"+((.@m <= 1)?"":"s");
				set .@s$, .@s+" second"+((.@s <= 1)?"":"s");
				set .@time$,""+.@d$+" "+.@h$+" "+.@m$+" "+.@s$+"";
				mes "I'm sorry but you have to wait";
				mes ""+.@time$+" before you can reset again!";
				close;
		}else{
		set #FreeReset,gettimetick(2)+(2592000);
		mes "You can only avail the free reset once 2 month... Thank you.";
		resetstatus;
		}

	close;
	
	case 4:
		.@date$ = gettimestr("%Y-%m-%d %H", 21);
		if(.@date$ >= .schedule$){goto OnDueDate; }
		
			mes .NpcName$;
			mes "As a master, I've been ordered to give you a free reset. Where do I start?";
			next;
				//switch(select("Stats:Skills")) { 
				switch(select("Stats")) {
				case 1: 
					mes "[ Ability Master ]";
					mes "Good Choice..";
					resetstatus;
					close; 
				case 2: 
					mes "[ Ability Master ]";
					mes "Good Choice..";
					resetskill;
					close2; 
					end;
				}
		
		break;
		
		
	case 5:
		mes .NpcName$;	
		mes "Okay, see you later.";
		close;
}

OnDueDate:
	mes .NpcName$;
	mes "Sorry but event is available only until "+.mto+"/"+.dto+"/"+gettime(GETTIME_YEAR)+" "+.hto+":00 Server Time.";
	close;
end;

/*
OnSkillPlatinum:

	skill 142,1,0;
	switch(BaseClass) {
		case 0: if (Class !=23 && skill_nov == 6 || checkquest(1000) == 2) skill "NV_TRICKDEAD",1,0; break; // Novice Trick Dead
		case 1: if (sm_movingrecovery_x == 2 || checkquest(1000) == 2) {skill "SM_MOVINGRECOVERY",1,0;} skill "SM_FATALBLOW",1,0; skill "SM_AUTOBERSERK",1,0; break;
		case 2: if (checkquest(1000) == 2) skill "MG_ENERGYCOAT",1,0; break;
		case 3: if (checkquest(1000) == 2) skill "AC_MAKINGARROW",1,0; skill "AC_CHARGEARROW",1,0; break;
		case 4: if (checkquest(1000) == 2) skill "AL_HOLYLIGHT",1,0; break;
		case 5: if (checkquest(1000) == 2) skill "MC_CARTREVOLUTION",1,0; skill "MC_CHANGECART",1,0; skill "MC_LOUD",1,0; break;
		case 6: if (checkquest(1000) == 2) skill "TF_SPRINKLESAND",1,0; skill "TF_BACKSLIDING",1,0; skill 151,1,0; skill "TF_THROWSTONE",1,0; break;
		default: break;
	}
	switch(BaseJob) {
		case 7: if (KNGT_SK == 9 || checkquest(1000) == 2) skill "KN_CHARGEATK",1,0; break;
		case 8: if (PRIEST_SK == 100 || checkquest(1000) == 2) skill "PR_REDEMPTIO",1,0; break;
		case 9: if (WIZ_SK == 100 || checkquest(1000) == 2) skill "WZ_SIGHTBLASTER",1,0; break;
		case 10: if (BLACK_SK >= 7 || checkquest(1000) == 2) {skill "BS_UNFAIRLYTRICK",1,0;} if (BLACK_SK2 >= 2 || checkquest(1000) == 2) {skill "BS_GREED",1,0;} break;
		case 11: if (qskill_hunter == 100 || checkquest(1000) == 2) skill "HT_PHANTASMIC",1,0; break;
		case 12: if (ASSN_SK == 7 || checkquest(1000) == 2) {skill "AS_SONICACCEL",1,0;} if (ASSN_SK2 == 1 || checkquest(1000) == 2) {skill "AS_VENOMKNIFE",1,0;} break;
		case 14: if (CRUS_SK == 8 || checkquest(1000) == 2) skill "CR_SHRINK",1,0; break;
		case 15: if (MONK_SK == 7 || checkquest(1000) == 2) skill "MO_KITRANSLATION",1,0; skill "MO_BALKYOUNG",1,0; break;
		case 16: if (SAG_SK == 100 || checkquest(1000) == 2) skill "SA_CREATECON",1,0; skill 1008,1,0; skill 1017,1,0; skill 1018,1,0; skill 1019,1,0; break;
		case 17: if (ROG_SK == 13 || checkquest(1000) == 2) skill "RG_CLOSECONFINE",1,0; break;
		case 18: if (bioeth == 13 || checkquest(1000) == 2) skill "AM_BIOETHICS",1,0; break;	// Bioethics
		case 19: if (qskill_bard == 9 || checkquest(1000) == 2) skill "BA_PANGVOICE",1,0; break;	// Pang Voice
		case 20: if (DANCER_SK == 9 || checkquest(1000) == 2) skill "DC_WINKCHARM",1,0; break;
		default: break;
	}
	
end;
*/

OnDoResetDate:
	if ( compare( .@atcmd_parameters$, "off" ) ) { 
		set .event,0;
		dispbottom "Unlimited Skills and Stats Reset is now disabled.";
	}else if ( compare( .@atcmd_parameters$, "on" ) ) { 
		explode(.@sched_to$, .@atcmd_parameters$[1], "-");
		
		set .mto, .@sched_to$[0];
		set .dto, .@sched_to$[1];
		set .hto, .@sched_to$[2];
		
		if(.mto < 1 || .mto > 12){
			message strcharinfo(0),"Invalid Month Number.";
			message strcharinfo(0),"Month: 1 ~ 12";
		}else if(.dto < 1 || .dto > 31){
			message strcharinfo(0),"Invalid Day Number.";
			message strcharinfo(0),"Day: 01 ~ 31";
		}else if(.hto < 1 || .hto > 24){
			message strcharinfo(0),"Invalid Hour Number.";
			message strcharinfo(0),"Hour: 01 ~ 24";
		}else{
			set .event,1;
			dispbottom "Unlimited Skills and Stats Reset is now enabled.";
		}
		set .schedule$, gettime(DT_DAYOFYEAR)+"-"+.@sched_to$[0]+"-"+ .@sched_to$[1]+" "+.@sched_to$[2];
	}else{
		message strcharinfo(0),"@npcreset <on/off> <Month-Day-Hour>";
		message strcharinfo(0),"@npcreset failed.";
	}
end;

OnInit:
	set .schedule$,"";
	set .event,0;		// On = 1 Off = 0
	set .stoneid,6320;	// reset stone id = 6320
	set .NpcName$,"["+strnpcinfo(0)+"]";
	setarray .minrange[0], 1,51,61,71,81,91;  // Min Level Required
	setarray .maxrange[0],50,60,70,80,90,99;  // Max Level Required
	setarray .stones[0],   1,2,3,4,5,6;  // Number of Stones
	setarray .month$[1],"January","February","March","April","May","June","July","August","September","October","November","December";

	bindatcmd "npcreset","RESET::OnDoResetDate",50,100;	
end;
}
