//===== rAthena Script =======================================
//= Euphy's WOE Controller
//===== By: ==================================================
//= Euphy
//===== Current Version: =====================================
//= 1.5
//===== Compatible With: =====================================
//= rAthena Project
//===== Description: =========================================
//= A controller for War of Emperium designed for
//= simplicity and ease of use.
//= Many concepts taken from ToastOfDoom's script,
//= and "rewards" function originally by Goddameit.
//===== Additional Comments: =================================
//= Be sure to disable the default agit controllers!
//== npc\guild\agit_controller.txt
//== npc\guild2\agit_start_se.txt
//============================================================

// Information NPC
//============================================================
prontera,163,109,4	script	WOE Information	2_BOARD1,{
	doevent "WOE_CONTROL::OnMenu";
	end;
OnAgitStart:
	while(agitcheck()) {
		specialeffect EF_BEGINSPELL6;
		sleep 2000;
	}
	end;
}

// Script Core
//============================================================
-	script	WOE_CONTROL	FAKE_NPC,{
function Disp_Owner; function Add_Zero;

OnDoEventReward:
	if (compare(.@atcmd_parameters$, "add")) {
	
		set .@rewardid, .@atcmd_parameters$[1];
		set .@rewardamount, .@atcmd_parameters$[2];
		
		if(getitemname(.@rewardid) == "null"){
			dispbottom "Invalid reward id or don't exist in the database.";
		}else if(.@rewardamount < 1 || .@rewardamount > 100){
			dispbottom "Invalid reward amount and it should be from 1 ~ 100.";
		}else if(.@atcmd_numparameters == 3){
			if(getarraysize($event_reward$) >= 5){
				dispbottom "Rewards is already exceeded to its limit of 5 items.";
				end;
			}
			set $event_reward$[getarraysize($event_reward$)], .@rewardid+":"+.@rewardamount;
			dispbottom "[ Added ] "+ getitemname(.@rewardid) + " ( "+.@rewardamount+" "+((.@rewardamount > 1)?"pcs":"pc")+" ) has been added to the rewards.",0x00ff00;
		}else{
			dispbottom "Usage: @wereward <add> <itemid> <amount>";
		}
	}else if (compare(.@atcmd_parameters$, "rewards")) {
		for(set .@k,0; .@k<getarraysize($event_reward$); set .@k,.@k+1){
			explode(.@rr_item$, $event_reward$[.@k], ":");
			set .@itemid, .@rr_item$[0];
			set .@amount, .@rr_item$[1];
			dispbottom (.@k+1)+". "+getitemname(.@itemid) + " ( "+.@amount+" "+((.@amount > 1)?"pcs":"pc")+" )";
		}
		deletearray .@rr_item$;
	}else if (compare(.@atcmd_parameters$, "reset")) {
		deletearray $event_reward$;
		dispbottom "WoE Event rewards has been reset.";
	}else{
		dispbottom "Usage: @wereward <add/reset/rewards>";
	}
end;

OnInit:
	bindatcmd "wereward","WOE_CONTROL::OnDoEventReward",90,100;	

// -----------------------------------------------------------
//  Configuration settings.
// -----------------------------------------------------------

	set .CastleWarp,0;		// 1: Always enable all castle warps. | 0: Warp only to active castles.
	set .AutoKick,1;		// Automatically kick players from inactive castles during WOE? (1:yes / 0:no)
	set .NoOwner,1; 		// Automatically kick players from unconquered castles outside of WOE? (1:yes / 0:no)
	set .ExitWarp,0;		// Warp all players from castles when WOE ends? (1:yes / 0:no)
	set .GMAccess,50;		// GM level required to access Session Manager.

// -----------------------------------------------------------
//  Reward options.
// -----------------------------------------------------------
//  [1] Enable rewards.
//  [2] Mail all rewards.
//      - If not set, players receive items in their inventory.
//      - Only ONE item can be sent via mail, plus Zeny.
//      - Note that offline players do NOT receive rewards.
//  [4] Only reward Guild Masters.
//      - If not set, all guild members are rewarded.
//      - If mailing is enabled (option 2), offline Guild Masters WILL receive rewards.
//  [8] Duplicate IP check.
//      - Members in a guild with the same IP address are not rewarded.
//      - If Guild Masters is enabled (option 4), this feature is not used.
// -----------------------------------------------------------

	// Combine values as needed (e.g. 1|8 = 1+8 = 9).
	set .Options,1|2;

	// Rewards per castle.
	// -- when given directly: <itemID>,<amount>{,<itemID>,<amount>,...}
	// -- via mail (option 2): <itemID>,<amount>,<Zeny>
	setarray .Reward[0],32066,1,32013,1,32375,5;

// -----------------------------------------------------------
//  Constants (leave this section alone).
// -----------------------------------------------------------

	setarray .Castles$[0],
		"prtg_cas01","prtg_cas02","prtg_cas03","prtg_cas04","prtg_cas05",
		"payg_cas01","payg_cas02","payg_cas03","payg_cas04","payg_cas05",
		"gefg_cas01","gefg_cas02","gefg_cas03","gefg_cas04","gefg_cas05",
		"aldeg_cas01","aldeg_cas02","aldeg_cas03","aldeg_cas04","aldeg_cas05";
	setarray .Days$[0],"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday";
	setarray .Regions$[0],"Prontera","Payon","Geffen","Aldebaran";
	setarray .Map$[0],"prt_gld","pay_gld","gef_fild13","alde_gld";
	setarray .Map_X[0],134,240,153,111,208,121,295,317,140,204,214,308,143,193,305,48, 95,142,239,264;
	setarray .Map_Y[0], 65,128,137,240,240,233,116,293,160,266, 75,240,240,278, 87,83,249, 85,242, 90;
	setarray .ClockTime[1], 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24;

// -----------------------------------------------------------

	set .Size, getarraysize($WOE_CONTROL);
	if (.AutoKick || .NoOwner)
		for(set .@i,0; .@i<20; set .@i,.@i+1) {
			setmapflag .Castles$[.@i], mf_loadevent;
			setd "."+.Castles$[.@i], .@i;
		}
	if (!agitcheck()) sleep 4000;
	set .Init,1;
	
OnMinute00:
	freeloop(1);
	if (agitcheck() || agitcheck2()) {
		for(set .@i,0; .@i<.Size; set .@i,.@i+4)
			if (gettime(DT_DAYOFWEEK) == $WOE_CONTROL[.@i] && gettime(DT_HOUR) == $WOE_CONTROL[.@i+2]) {
			OnWOEEnd:
				announce "The War Of Emperium is over!",bc_all|bc_woe;
				//agitend; agitend2;
				agitend;
				sleep 1000;
				for(set .@j,0; .@j<20; set .@j,.@j+1) {
					if (.Active[0]&(1<<.@j)){ 
						// == WoE Streak == //
						set .@guildid, getcastledata(.Castles$[.@j],1);
						query_sql "UPDATE guild SET woe_points = woe_points +100 WHERE guild_id = "+.@guildid;

						query_sql("SELECT `guild_id` FROM `guild_woe_streak` WHERE `castle_id` = '"+.Castles$[.@j]+"'",.@guild);
						if(!.@guild){
							query_sql "INSERT INTO `guild_woe_streak` (`guild_id`, `guild_name`, `castle_id`, `castle_name`, `streak`) VALUES ('"+.@guildid+"','"+getguildname(.@guildid)+"', '"+.Castles$[.@j]+"', '"+getcastlename(.Castles$[.@j])+"','1')";
						}else if(.@guild == .@guildid){
							query_sql "UPDATE `guild_woe_streak` SET `streak` = `streak` + 1 WHERE `castle_id` = '"+.Castles$[.@j]+"'";
						}else if(.@guild != .@guildid){
							query_sql "UPDATE `guild_woe_streak` SET `guild_id` = '"+.@guildid+"', `guild_name` = '"+getguildname(.@guildid)+"', `castle_id` = '"+.Castles$[.@j]+"', `castle_name` = '"+getcastlename(.Castles$[.@j])+"', `streak` = 1 WHERE `castle_id` = '"+.Castles$[.@j]+"'";
						}

						Disp_Owner(.Castles$[.@j],1);
						
					}
					if (.ExitWarp) maprespawnguildid .Castles$[.@j],0,3;
				}
				
				if (.Options&1 && .Active[0] && .ForceEnd != 2) callsub OnReward, .Active[0];
				deletearray .Active[0],2;
				if (.ForceEnd) { set .ForceEnd,0; end;}
				break;

			}
	}
	if ((!agitcheck()) || .Init) {
		if (!agitcheck()) set .Init,0;
		OnWoeStart:
		for(set .@i,0; .@i<.Size; set .@i,.@i+4)
			if (gettime(DT_DAYOFWEEK) == $WOE_CONTROL[.@i] && gettime(DT_HOUR) >= $WOE_CONTROL[.@i+1] && gettime(DT_HOUR) < $WOE_CONTROL[.@i+2]) {
				deletearray .Active[0],2;
				set .Active[0], $WOE_CONTROL[.@i+3];
				//if (.Init) { agitend; agitend2; }
				if (.Init) { agitend; }
				else announce "The War Of Emperium has begun!",bc_all|bc_woe;
				sleep 1000; 
				agitstart; // agitstart2;
				for(set .@j,0; .@j<20; set .@j,.@j+1) {
					if (.Active[0]&(1<<.@j)) {
						if (!.Init) Disp_Owner(.Castles$[.@j],0);
						set .Active[1], .Active[1] | (1<<((.@j/5)+1));
						set .@GID, GetCastleData(.Castles$[.@j],1);
						if (.@GID == 0) {
							//killmonsterall .Castles$[.@j];
							if (compare(.Castles$[.@j],"aldeg")) {
								// Normal Spawns
								monster .Castles$[.@j],0,0,"Evil Druid",1117,10;
								monster .Castles$[.@j],0,0,"Khalitzburg",1132,4;
								monster .Castles$[.@j],0,0,"Abysmal Knight",1219,2;
								monster .Castles$[.@j],0,0,"Executioner",1205,1;
								monster .Castles$[.@j],0,0,"Penomena",1216,10;
								monster .Castles$[.@j],0,0,"Alarm",1193,18;
								monster .Castles$[.@j],0,0,"Clock",1269,9;
								monster .Castles$[.@j],0,0,"Raydric Archer",1276,7;
								monster .Castles$[.@j],0,0,"Wanderer",1208,3;
								monster .Castles$[.@j],0,0,"Alice",1275,1;
								monster .Castles$[.@j],0,0,"Bloody Knight",1268,1;
								monster .Castles$[.@j],0,0,"Dark Lord",1272,1;
								// Set Emperium room spawn coordinates and spawn monsters.
								if (.Castles$[.@j] == "aldeg_cas01") { setarray .@emproom[0],216,23; }
								else if (.Castles$[.@j] == "aldeg_cas02") { setarray .@emproom[0],213,23; }
								else if (.Castles$[.@j] == "aldeg_cas03") { setarray .@emproom[0],205,31; }
								else if (.Castles$[.@j] == "aldeg_cas04") { setarray .@emproom[0],36,217; }
								else if (.Castles$[.@j] == "aldeg_cas05") { setarray .@emproom[0],27,101; }
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Dark Lord",1272,1;
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Tower Keeper",1270,4;
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Bloody Knight",1268,1;
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Abysmal Knight",1219,1;
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Raydric Archer",1276,5;
							}
							else if (compare(.Castles$[.@j],"gefg")) {
								// Normal Spawns
								monster .Castles$[.@j],0,0,"Evil Druid",1117,10;
								monster .Castles$[.@j],0,0,"Wind Ghost",1263,11;
								monster .Castles$[.@j],0,0,"Bathory",1102,10;
								monster .Castles$[.@j],0,0,"Jakk",1130,10;
								monster .Castles$[.@j],0,0,"Marduk",1140,20;
								monster .Castles$[.@j],0,0,"Raydric",1163,9;
								monster .Castles$[.@j],0,0,"Alice",1275,1;
								monster .Castles$[.@j],0,0,"Abysmal Knight",1219,1;
								monster .Castles$[.@j],0,0,"Moonlight Flower",1150,1;
								monster .Castles$[.@j],0,0,"Phreeoni",1159,1;
								// Set Emperium room spawn coordinates and spawn monsters.
								if (.Castles$[.@j] == "gefg_cas01") { setarray .@emproom[0],197,181; }
								else if (.Castles$[.@j] == "gefg_cas02") { setarray .@emproom[0],176,178; }
								else if (.Castles$[.@j] == "gefg_cas03") { setarray .@emproom[0],244,166; }
								else if (.Castles$[.@j] == "gefg_cas04") { setarray .@emproom[0],174,177; }
								else if (.Castles$[.@j] == "gefg_cas05") { setarray .@emproom[0],194,184; }
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Mysteltainn",1203,1;
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Orc Hero",1087,1;
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"High Orc",1213,10;
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Orc Archer",1189,10;
							}
							else if (compare(.Castles$[.@j],"payg")) {
								// Normal Spawns
								monster .Castles$[.@j],0,0,"Greatest General",1277,9;
								monster .Castles$[.@j],0,0,"Wanderer",1208,10;
								monster .Castles$[.@j],0,0,"Mutant Dragonoid",1262,5;
								monster .Castles$[.@j],0,0,"Bathory",1102,5;
								monster .Castles$[.@j],0,0,"Moonlight Flower",1150,1;
								monster .Castles$[.@j],0,0,"Eddga",1115,1;
								monster .Castles$[.@j],0,0,"Horong",1129,11;
								monster .Castles$[.@j],0,0,"Raydric Archer",1276,5;
								monster .Castles$[.@j],0,0,"Kobold Archer",1282,4;
								monster .Castles$[.@j],0,0,"Gargoyle",1253,5;
								// Set Emperium room spawn coordinates and spawn monsters.
								if (.Castles$[.@j] == "payg_cas01") { setarray .@emproom[0],139,139; }
								else if (.Castles$[.@j] == "payg_cas02") { setarray .@emproom[0],38,25; }
								else if (.Castles$[.@j] == "payg_cas03") { setarray .@emproom[0],269,265; }
								else if (.Castles$[.@j] == "payg_cas04") { setarray .@emproom[0],270,28; }
								else if (.Castles$[.@j] == "payg_cas05") { setarray .@emproom[0],30,30; }
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Moonlight Flower",1150,1;
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Eddga",1115,1;
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Wanderer",1208,6;
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Raydric Archer",1276,5;
							}
							else if (compare(.Castles$[.@j],"prtg")) {
								// Normal Spawns
								monster .Castles$[.@j],0,0,"Raydric",1163,1;
								monster .Castles$[.@j],0,0,"Khalitzburg",1132,10;
								monster .Castles$[.@j],0,0,"Abysmal Knight",1219,5;
								monster .Castles$[.@j],0,0,"Bloody Knight",1268,5;
								monster .Castles$[.@j],0,0,"Stormy Knight",1251,1;
								monster .Castles$[.@j],0,0,"Hatii",1252,1;
								monster .Castles$[.@j],0,0,"Raydric Archer",1276,5;
								monster .Castles$[.@j],0,0,"Gryphon",1259,2;
								monster .Castles$[.@j],0,0,"Chimera",1283,3;
								monster .Castles$[.@j],0,0,"Alice",1275,1;
								monster .Castles$[.@j],0,0,"Zealotus",1200,1;
								// Set Emperium room spawn coordinates and spawn monsters.
								if (.Castles$[.@j] == "prtg_cas01") { setarray .@emproom[0],197,197; }
								else if (.Castles$[.@j] == "prtg_cas02") { setarray .@emproom[0],157,174; }
								else if (.Castles$[.@j] == "prtg_cas03") { setarray .@emproom[0],16,220; }
								else if (.Castles$[.@j] == "prtg_cas04") { setarray .@emproom[0],291,14; }
								else if (.Castles$[.@j] == "prtg_cas05") { setarray .@emproom[0],266,266; }
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Guardian Knight",1268,1;
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Guardian Master",1251,1;
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Hatii",1252,1;
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Guardian Knight",1219,1;
								monster .Castles$[.@j],.@emproom[0],.@emproom[1],"Raydric Archer",1276,5;
							}
						}
					} else {
						if (.@j<20) {
							donpcevent "Agit#"+.Castles$[.@j]+"::OnAgitEnd";
							//killmonster .Castles$[.@j], "Agit#"+.Castles$[.@j]+"::OnAgitBreak";
						} else {
							// donpcevent "Manager#"+.Castles$[.@j]+"::OnAgitEnd2";
							// killmonster .Castles$[.@j], "Steward#"+.EndLabel$[.@j-20]+"::OnStartArena";
						}
					}
				}
				break;
			}
	}
	set .Init,0;
	end;

function Disp_Owner {
	set .@o, getcastledata(getarg(0),1);
	if (.@o) announce "The ["+getcastlename(getarg(0))+"] castle "+((getarg(1))?"has been conquered":"is currently held")+" by the ["+getguildname(.@o)+"] guild.",bc_all|bc_woe;
	else announce "The ["+getcastlename(getarg(0))+"] castle is currently unoccupied.",bc_all|bc_woe;
	return;
}
function Add_Zero {
	return ((getarg(0)<10)?"0":"")+getarg(0)+(getarg(1,0)?".":":")+"00";
}

OnReward:
	
	set .@sql$, ((.Options&4)?"position = 0":"online = 1");
	if (.Options&2) set .@str$,gettimestr("%B %d, %Y",21);
	freeloop(1);
	
	for(set .@i,0; .@i<20; set .@i,.@i+1)
		
		if (getarg(0)&(1<<.@i)) {
			set .@GID, getcastledata(.Castles$[.@i],1);
			
			//if (!.@GID) continue;

			set .@size, query_sql("SELECT account_id,char_id FROM `guild_member` WHERE guild_id = '"+.@GID+"' AND "+.@sql$,.@aid,.@cid);
			
			for(set .@j,0; .@j<.@size; set .@j,.@j+1) {
				if (.Options&8 && !(.Options&4)) {
					set .@ip$, replacestr(getcharip(.@aid[.@j]),".","a");
					if (getd(".@ip_"+.@i+"_"+.@ip$)) continue;
					setd ".@ip_"+.@i+"_"+.@ip$,1;
				}
				if (.Options&2) {
					.@charid = .@cid[.@j];
					.@sender$ = "Admin";
					.@title$ = "Siege Reward: "+getcastlename(.Castles$[.@i])+"";
					.@body$ = "Brave one, Congratulations! Your guild has successfully occupied territory in the War of Emperium on "+.@str$+".";
					.@zeny = 0;
					setarray .@mailitem[0], .Reward[0], .Reward[2], .Reward[4];
					setarray .@mailamount[0], .Reward[1], .Reward[3], .Reward[5];
					mail .@charid, .@sender$, .@title$, .@body$, .@zeny, .@mailitem, .@mailamount;
					
					//- WoE Event Rewards
					if(getarraysize($event_reward$)){
						if(isloggedin(.@aid[.@j],.@cid[.@j])){
							.@charid = .@cid[.@j];
							.@sender$ = "Admin";
							.@title$ = "Event Reward: War of Emperium";
							.@body$ = "Congratulations! Your guild has successfully occupied territory in the War of Emperium Event.";
							.@zeny = 0;
							for(set .@k,0; .@k<getarraysize($event_reward$); set .@k,.@k+1){
								explode(.@rr_item$, $event_reward$[.@k], ":");
								set .@itemid, .@rr_item$[0];
								set .@amount, .@rr_item$[1];
								set .@mailitem[getarraysize(.@mailitem)],.@itemid;
								set .@mailamount[getarraysize(.@mailamount)],.@amount;
							}
							mail .@charid, .@sender$, .@title$, .@body$, .@zeny, .@mailitem, .@mailamount;
						}
					}
					
					if (!getd(".@str_"+.@cid[.@j]) && isloggedin(.@aid[.@j],.@cid[.@j])) {

						setd ".@str_"+.@cid[.@j],1;
						message rid2name(.@aid[.@j]),"You've got mail! Please re-login to update your mailing list.";
					}
					
				} else if (isloggedin(.@aid[.@j])) {
					for(set .@k,0; .@k<getarraysize(.Reward); set .@k,.@k+2)
						getitem .Reward[.@k], .Reward[.@k+1], .@aid[.@j];
					message rid2name(.@aid[.@j]),"You have been rewarded for conquering "+getcastlename(.Castles$[.@i])+".";
				}
				
			}
		}
	return;

OnPCLoadMapEvent:
	if (getgmlevel() >= .GMAccess) end;
	if (!compare(strcharinfo(3),"g_cas")) end;
	if (((.AutoKick && .Active[0]) || (.NoOwner && !getcastledata(strcharinfo(3),1))) && !(.Active[0]&(1<<getd("."+strcharinfo(3))))) {
		if (getcharid(2) && getcastledata(strcharinfo(3),1) == getcharid(2)) end;
		sleep2 1000;
		message strcharinfo(0), getcastlename(strcharinfo(3))+" is currently inactive.";
		sleep2 5000;
		if (compare(strcharinfo(3),"g_cas")) warp "SavePoint",0,0;
	}
	end;

OnMenu:
while(1) {
	mes "[WOE Information]";
	if (agitcheck() || agitcheck2()) {
		if (.Active[0]) {
			for(set .@i,0; .@i<.Size; set .@i,.@i+4)
				if (gettime(DT_DAYOFWEEK) == $WOE_CONTROL[.@i] && gettime(DT_HOUR) >= $WOE_CONTROL[.@i+1] && gettime(DT_HOUR) < $WOE_CONTROL[.@i+2]) {
					set .@i, $WOE_CONTROL[.@i+2];
					break;
				}
			mes "The War of Emperium is ^0055FFactive^000000 until ^FF0000"+Add_Zero(.ClockTime[.@i])+"^000000 in the following regions:";
			mes " ";
			for(set .@i,0; .@i<6; set .@i,.@i+1)
				if (.Active[1]&(1<<(.@i+1))) mes " > ^777777"+.Regions$[.@i]+"^000000";
		} else
			mes "The War of Emperium is ^0055FFactive^000000.";
	} else {
		for(set .@i,0; .@i<.Size; set .@i,.@i+4)
			if ((gettime(DT_DAYOFWEEK) == $WOE_CONTROL[.@i] && gettime(DT_HOUR) <= $WOE_CONTROL[.@i+1]) || gettime(DT_DAYOFWEEK) < $WOE_CONTROL[.@i]) {
				setarray .@time[0],$WOE_CONTROL[.@i],$WOE_CONTROL[.@i+1];
				break;
			}
		if (!getarraysize(.@time))
			setarray .@time[0],$WOE_CONTROL[0],$WOE_CONTROL[1];
		mes "The War of Emperium is ^777777inactive^000000.";
		if (.Size) {
			mes " ";
			mes "The next session will begin";
			mes "on ^0055FF"+.Days$[.@time[0]]+"^000000 at "+Add_Zero(.ClockTime[.@time[1]])+"^000000.";
		}
	}
	next;
	switch(select(" ~ Check schedule...: ~ View castle owners...:"+((getgmlevel()<.GMAccess || !getgmlevel())?"":" ~ Manage sessions...")+": ~ ^777777Cancel^000000")) {

//	switch(select(""+((.CastleWarp || .Active[1])?" ~ Warp to castles...":"")+": ~ Check schedule...: ~ View castle owners...:"+((getgmlevel()<.GMAccess || !getgmlevel())?"":" ~ Manage sessions...")+": ~ ^777777Cancel^000000")) {
/*
	case 1:
		if (.CastleWarp) set .@clr$,"^0055FF";
		set .@menu$,"";
		for(set .@i,0; .@i<4; set .@i,.@i+1) {
			if (.CastleWarp || .Active[1]&(1<<(.@i+1)))
				set .@menu$, .@menu$+" ~ "+((.Active[1]&(1<<(.@i+1)))?.@clr$:"^777777")+.Regions$[.@i]+" Castles^000000";
			set .@menu$, .@menu$+":";
		}
		set .@i, select(.@menu$)-1;
		set .@menu$,"";
		for(set .@j,.@i*5; .@j<(.@i*5)+5; set .@j,.@j+1) {
			if (.CastleWarp || .Active[0]&(1<<.@j))
				set .@menu$, .@menu$+" ~ "+((.Active[0]&(1<<.@j))?.@clr$:"^777777")+getcastlename(.Castles$[.@j])+"^000000";
			set .@menu$, .@menu$+":";
		}
		set .@j, select(.@menu$)-1;
		warp .Map$[.@i],.Map_X[(.@i*5)+.@j],.Map_Y[(.@i*5)+.@j];
		close;
*/
	case 1:
		mes "[Schedule]";
		if (.Size) {
			freeloop(1);
			for(set .@i,0; .@i<.Size; set .@i,.@i+4) {
				mes "> ^FF0000"+.Days$[$WOE_CONTROL[.@i]]+" ("+Add_Zero($WOE_CONTROL[.@i+1])+"-"+Add_Zero($WOE_CONTROL[.@i+2])+")^000000";
				for(set .@j,0; .@j<20; set .@j,.@j+1)
					if ($WOE_CONTROL[.@i+3]&(1<<.@j)) mes "  ~ "+getcastlename(.Castles$[.@j])+" ^777777("+.Castles$[.@j]+")^000000";
				if (.@i+4 < .Size) mes " ";
			}
			freeloop(0);
		} else
			mes "No times are configured.";
		next;
		break;
	case 2:
		mes "[Castle Ownership]";
		for(set .@i,0; .@i<4; set .@i,.@i+1) {
			set .@k, .@i*5;
			mes "> ^FF0000"+.Regions$[.@i]+"^000000";
			for(set .@j,.@k; .@j<(.@k+5); set .@j,.@j+1) { 
				set .@t, getcastledata(.Castles$[.@j],1);
				mes "  ~ "+getcastlename(.Castles$[.@j])+": "+((.@t)?"^0055FF"+getguildname(.@t):"^777777unoccupied")+"^000000";
			}
			if (.@i < 5) mes " ";
		}
		next;
		break;
	case 3:
	while(1) {
		mes "[Session Manager]";
		mes "There are ^0055FF"+(.Size/4)+" session(s)^000000 configured.";
		mes "What would you like to do?";
		next;
		switch(select(" ~ Add a session...: ~ Delete a session...: ~ Reload settings...:"+((agitcheck())?" ~ End WOE session...":" ~ Start WOE session...")+": ~ ^777777Go back^000000")) {
		case 1:
			mes "[New Session]";
			if (.Size > 127) {
				mes "You have already reached the maximum of 32 sessions.";
				next;
				break;
			}
			mes "Select a day.";
			next;
			set .@Day, select(" ~ "+implode(.Days$,": ~ "))-1;
			mes "[New Session]";
			mes "Select a start time for ^0055FF"+.Days$[.@Day]+"^000000.";
			next;
			set .@menu$,"";
			for(set .@i,0; .@i<23; set .@i,.@i+1)
				set .@menu$, .@menu$+" ~ "+Add_Zero(.ClockTime[.@i],1)+":";
			set .@Start, select(.@menu$)-1;
			mes "[New Session]";
			mes "Select an end time for ^0055FF"+.Days$[.@Day]+"^000000.";
			next;
			set .@menu$,"";
			for(set .@i,.@Start+1; .@i<24; set.@i,.@i+1)
				set .@menu$, .@menu$+" ~ "+Add_Zero(.ClockTime[.@i],1)+":";
			set .@End, select(.@menu$)+.@Start;
			for(set .@i,0; .@i<.Size; set .@i,.@i+4)
				if (.@Day == $WOE_CONTROL[.@i] &&
				   ((.@Start >= $WOE_CONTROL[.@i+1] && .@Start < $WOE_CONTROL[.@i+2]) ||
				    (.@End > $WOE_CONTROL[.@i+1] && .@End <= $WOE_CONTROL[.@i+2]) ||
				    (.@Start <= $WOE_CONTROL[.@i+1] && .@End >= $WOE_CONTROL[.@i+2]))) {
					mes "[New Session]";
					mes "The chosen times overlap with an existing session.";
					next;
					set .@d,1;
					break;
				}
			if (.@d) { set .@d,0; break; }
			set .@Castle,0;
			while(1) {
				mes "[New Session]";
				mes "^0055FF"+.Days$[.@Day]+" ("+Add_Zero(.ClockTime[.@start])+"-"+Add_Zero(.ClockTime[.@end])+")^000000";
				mes " > Castles:";
				if (!.@Castle)
					mes "   ~ ^777777(none selected)^000000";
				else for(set .@i,0; .@i<20; set .@i,.@i+1)
					if (.@Castle&(1<<.@i)) mes "   ~ "+getcastlename(.Castles$[.@i])+" ("+.Castles$[.@i]+")";
				next;
				set .@menu$,((.@Castle)?" ~ ^FF0000Finished...^000000":"")+":";
				for(set .@i,0; .@i<20; set .@i,.@i+1)
					set .@menu$, .@menu$+" ~ "+((.@Castle&(1<<.@i))?"^0055FF":"")+getcastlename(.Castles$[.@i])+" ("+.Castles$[.@i]+")^000000:";
				set .@i, select(.@menu$)-1;
				if (.@i)
					set .@Castle, .@Castle^(1<<(.@i-1));
				else {
					mes "[New Session]";
					mes "Are you sure?";
					next;
					switch(select(" ~ ^0055FFAdd session...^000000: ~ Continue selecting castles...: ~ ^777777Cancel^000000")) {
					case 1:
						for(set .@i,0; .@i<.Size; set .@i,.@i+4)
							if ((.@Day == $WOE_CONTROL[.@i] && .@End <= $WOE_CONTROL[.@i+1]) || .@Day < $WOE_CONTROL[.@i]) {
								set .@d,1;
								break;
							}
						if (!.@d) { set .@d,1; set .@i,.Size; }
						copyarray $WOE_CONTROL[.@i+4], $WOE_CONTROL[.@i], .Size-.@i;
						setarray $WOE_CONTROL[.@i], .@Day, .@Start, .@End, .@Castle;
						set .Size, getarraysize($WOE_CONTROL);
					case 3:
						mes "[New Session]";
						mes ((.@d)?"Session added.":"Cancelled.");
						next;
						set .@d,1;
					case 2:
						break;
					}
					if (.@d) { set .@d,0; break; }
				}
			}
			break;
		case 2:
			mes "[Remove Session]";
			if (!.Size) {
				mes "There are no sessions configured.";
				next;
				break;
			}
			mes "Select a session to remove.";
			next;
			set .@menu$,"";
			for(set .@i,0; .@i<.Size; set .@i,.@i+4)
				set .@menu$, .@menu$+" ~ "+.Days$[$WOE_CONTROL[.@i]]+" ("+Add_Zero($WOE_CONTROL[.@i+1],1)+"-"+Add_Zero($WOE_CONTROL[.@i+2],1)+"):";
			set .@menu$, .@menu$+" ~ ^777777Cancel^000000";
			set .@i, select(.@menu$)-1;
			if (.@i == (.Size/4)) break;
			mes "[Remove Session]";
			mes "Delete ^0055FF"+.Days$[$WOE_CONTROL[.@i*4]]+"'s^000000 session?";
			mes "This action cannot be undone.";
			next;
			set .@j, select(" ~ ^FF0000Delete session...^000000: ~ ^777777Cancel^000000");
			mes "[Remove Session]";
			if (.@j == 2)
				mes "Cancelled.";
			else {
				deletearray $WOE_CONTROL[.@i*4],4;
				set .Size, getarraysize($WOE_CONTROL);
				mes "Session deleted.";
			}
			next;
			break;
		case 3:
			mes "[Reload Settings]";
			mes "This will trigger all events related to new session configurations, if any.";
			if (agitcheck() || agitcheck2()) {
				mes " ";
				mes "Be aware that this will disrupt the current WOE session.";
			}
			next;
			set .@i, select(" ~ ^0055FFReload settings...^000000: ~ ^777777Cancel^000000");
			mes "[Reload Settings]";
			if (.@i == 2) mes "Cancelled.";
			else {
				set .Init,1;
				donpcevent "WOE_CONTROL::OnMinute00";
				mes "Variables have been re-initialized.";
			}
			next;
			break;
		case 4:
			if (!agitcheck()){
				mes "WOE has started.";
				donpcevent "WOE_CONTROL::OnWoeStart";
				next;
				break;
			}
		
			mes "[Force Agit End]";
			if (!agitcheck()){
				mes "WOE has already ended.";
				next;
				break;
			}
			mes "This command will safely execute all AgitEnd events.";
			mes " ";
			mes "Kill the current WOE session?";
			next;
			set .@i, select(" ~ ^FF0000End session...^000000:"+((.Options&1)?" ~ ^FF0000End session without rewards...^000000":"")+": ~ ^777777Cancel^000000");
			mes "[Force Agit End]";
			if (.@i == 3)
				mes "Cancelled.";
			else {
				set .ForceEnd, .@i;
				donpcevent "WOE_CONTROL::OnWOEEnd";
				mes "WOE session terminated.";
			}
			next;
			break;
		case 5:
			set .@d,1; break;
		}
		if (.@d) { set .@d,0; break; }
		} break;
	case 4:
		close;
	} }
}