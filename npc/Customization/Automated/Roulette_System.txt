
//- A script where the roulette system automatically reset and change the items when it reach the time.

-	script	Roulette Reset	-1,{

OnInit:
	bindatcmd "roulettereset","Roulette Reset::OnDoCommand",99,100;
	
	setarray .roulette_level$[1],
				"1|9",
				"2|8",
				"3|7",
				"4|6",
				"5|5",
				"6|4",
				"7|3";
end;

OnDoCommand:
	resetroulette;
	
	query_sql "UPDATE `roulette_item_db` SET `status` = '0'"; 
	query_sql "DELETE FROM  `db_roulette` "; 

	for(set .@z,1; .@z < getarraysize(.roulette_level$); set .@z,.@z + 1){
	
		explode(.@nd$, .roulette_level$[.@z], "|");
		for(set .@x,0; .@x < getarraysize(.@nd$); set .@x,.@x + 1){
			set .@nd[.@x], atoi(.@nd$[.@x]);
		} 
		
		
		for(set .@y,1; .@y <= .@nd[1]; set .@y,.@y + 1){


			//- Delete the item array.
			deletearray .@id; deletearray .@itemid; deletearray .@itemamount; deletearray .@itemflag;
			

			//- Select an item from the database where allowed to appear in the roulette.
			query_sql("SELECT `id`,`item_id`,`item_amount` FROM `roulette_item_db` WHERE `level` = '"+.@nd[0]+"' AND `status` = '0' ORDER BY RAND() LIMIT 1", .@id, .@itemid, .@itemamount);
			
			//- Insert the item
			if(.@itemid){
				query_sql "INSERT INTO `db_roulette` (`index`, `level`, `item_id`, `amount`, `flag`) VALUES ( '"+.@count+"', '"+.@nd[0]+"', '"+.@itemid+"', '"+.@itemamount+"', '"+.@flag+"' )";
				query_sql "UPDATE `roulette_item_db` SET `status` = '1' WHERE `id` = '"+.@id+"'"; 
			}
			
			set .@count, .@count + 1;
			if(!.@flag){
				set .@flag, 1;
			}else{
				set .@flag, 0;
			}
		}
		
	}
	
	reloadroulette;
end;

}

/*
CREATE TABLE IF NOT EXISTS `roulette_item_db` (
  `id` bigint(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `level` enum('1','2','3','4','5','6','7') NOT NULL,
  `item_id` smallint(5) UNSIGNED NOT NULL DEFAULT '0',
  `item_amount` mediumint(8) UNSIGNED DEFAULT '1',
  `status` tinyint(1) UNSIGNED NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
*/