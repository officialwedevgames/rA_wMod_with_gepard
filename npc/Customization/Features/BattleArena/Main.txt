-	script	BattleArena	-1,{
	function checkpoints;
	function checkingame;
	function getcharname;
	
	mes "[ Arena Manager ]";
	mes "Welcome.. "+strcharinfo(0)+" to Battle Arena. Be a top player every week and get a reward.";
	mes " ";
	mes "[ Commands ]";
	mes "^0000ff@joinsolo^000000 ~ Participate in the Solo Arena.";
	mes "^0000ff@leavearena^000000 ~ Leave the Arena queue.";
	next;
	switch(select("> My Arena Stats:> Arena Rankings")) {

		case 1:
		mes "[ My Arena Status ]";
		query_sql "SELECT `char_id`, `points`, `win`, `loss`, `draw` FROM `pvp_arena_char_stats` ORDER BY `points` DESC", .@char_id, .@points, .@win, .@loss, .@draw;
		for( .@i = 0; .@i < getarraysize(.@char_id); .@i++ ) {
			if(.@char_id[.@i] == getcharid(0)){
				if(.@points == 1500){
					mes "[ ^ff0000Rank^000000 ] : ^0000ffCalibrating^000000";
					break;
				}else{
					mes "[ ^ff0000Rank^000000 ] : ^0000ff"+(.@i+1)+"^000000";
					mes "[ ^0000FFWin^000000 ] : "+.@win[.@i]+"";
					mes "[ ^FF0000Lose^000000 ] : "+.@loss[.@i]+"";
					mes "[ ^006600Death^000000 ] : "+.@draw[.@i]+"";
					mes "[ ^ff9900Arena Points^000000 ] : "+.@points[.@i]+"";					
					break;
				}
			}
		}
		close;
		
		case 2:
		mes "[ Arena Rankings ]";
		query_sql "SELECT `char_id`, `points`, `win`, `loss`, `draw` FROM `pvp_arena_char_stats` WHERE `points` != '1500' ORDER BY `points` DESC LIMIT 10", .@char_id, .@points, .@win, .@loss, .@draw;
		for( .@i = 0; .@i < getarraysize(.@char_id); .@i++ ) {
			mes "[ ^ff0000Rank "+(.@i+1)+"^000000 ] : ^0000ff"+getcharname(.@char_id[.@i])+"^000000";
			mes "[ ^0000FFW^000000: "+.@win[.@i]+" | ^FF0000L^000000: "+.@loss[.@i]+" | ^006600D^000000: "+.@draw[.@i]+" | ^ff9900AP^000000: "+.@points[.@i]+" ]";
		}
		close;
	}
	end;
	
OnInit:
	bindatcmd "joinsolo","BattleArena::OnDoSolo",0,100;	
	bindatcmd "leavearena","BattleArena::OnDoLeave",0,100;	
	query_sql "UPDATE `pvp_arena_db` SET `battle_status` = 1 WHERE `battle_status` = 2";
end;

OnDoSolo:
	checkingame();
	query_sql "SELECT `char_id` FROM `pvp_arena_char_stats` WHERE `char_id` = '"+getcharid(0)+"'", .@as;
	if(!.@as){
		query_sql "INSERT INTO `pvp_arena_char_stats` (`char_id`) VALUES ('"+getcharid(0)+"')";
	}
	query_sql "SELECT `account_id` FROM `pvp_arena_db` WHERE `account_id` = '"+getcharid(3)+"'", .@exists;
	if(!.@exists){
		query_sql "SELECT `points` FROM `pvp_arena_char_stats` WHERE `char_id` = '"+getcharid(0)+"'", .@pvp_points;
		query_sql "INSERT INTO `pvp_arena_db`(`account_id`, `char_id`, `points`, `mode`) VALUES ('"+getcharid(3)+"','"+getcharid(0)+"','"+.@pvp_points+"','1vs1')";
		callfunc "battle_arena_queue","Solo";
	}else{
		dispbottom "You are on queue list and you can use @leavearena to leave.";
	}
end;

OnDoDuo:
		mes "[ Arena Manager ]";
		mes "Coming Soon!";
		close;
		getpartymember(getcharid(1));
		if(!getcharid(1)){
			mes "[ Arena Manager ]";
			mes "We are not allowing you to participate on this mode since you don't have a party.";
			close;
		}else if($@partymembercount != 2){
			mes "[ Arena Manager ]";
			mes "Party should have 2 members only.";
			close;
		}else if(getpartyleader(getcharid(1),2) != getcharid(0)){
			mes "[ Arena Manager ]";
			mes "Tell your party leader to register.";
			close;
		}
		query_sql "SELECT `party_id` FROM `pvp_arena_db` WHERE `party_id` = '"+getcharid(1)+"'", .@exists;
		if(!.@exists){
			query_sql "INSERT INTO `pvp_arena_db`(`account_id`, `char_id`, `party_id`, `points`, `mode`) VALUES ('"+getcharid(3)+"','"+getcharid(0)+"','"+getcharid(1)+"','"+pvp_points+"','2vs2')";
		}
end;

OnDoLeave:
	checkingame();
	query_sql "DELETE FROM `pvp_arena_db` WHERE `account_id` = '"+getcharid(3)+"'";
end;

OnPCLoginEvent:
	query_sql "SELECT `char_id` FROM `pvp_arena_char_stats` WHERE `char_id` = '"+getcharid(0)+"'", .@exists;
	if(!.@exists){
		query_sql "INSERT INTO `pvp_arena_char_stats` (`char_id`) VALUES ('"+getcharid(0)+"')";
	}
end;

	function checkpoints {
		query_sql "SELECT `points` FROM `pvp_arena_char_stats` WHERE `char_id` = '"+getcharid(0)+"'", .@points;
		return .@points;
	}
	
	function getcharname {
		query_sql "SELECT `name` FROM `char` WHERE `char_id` = '"+getarg(0)+"'", .@name$;
		if(getarraysize(.@name$) < 1){
			return "Unknown";
		}else{
			return ""+.@name$;
		}
	}
	
	function checkingame {
		query_sql "SELECT `account_id` FROM `pvp_arena_db` WHERE `account_id` = '"+getcharid(3)+"' AND `battle_status` >= 1", .@inbattle;
		if(.@inbattle){
			dispbottom "Can't use this command for this moment.";
			end;
		}
	}

}



function	script	battle_arena_queue	{
	query_sql "SELECT COUNT(`account_id`) FROM `pvp_arena_db` WHERE `battle_status` = 0",.@waiting;
	query_sql "SELECT COUNT(`account_id`) FROM `pvp_arena_db` WHERE `battle_status` = 2",.@ingame;
	announce "~ Battle Arena [ "+getarg(0)+" ] ~ : [ Waiting : "+.@waiting+" ] [ In-Game : "+.@ingame+" ]",bc_all,0xFFA500;
	return;
}

prontera,125,94,4	duplicate(BattleArena)	Arena Manager#pay	4_M_MANAGER